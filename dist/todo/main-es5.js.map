{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/signup/signup.component.ts","webpack:///src/app/auth/signup/signup.component.html","webpack:///src/app/error/error.component.ts","webpack:///src/app/error/error.component.html","webpack:///src/app/error/error.interceptor.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/material.module.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/todo.service.ts","webpack:///src/app/todo/add-item/add-item.component.ts","webpack:///src/app/todo/add-item/add-item.component.html","webpack:///src/app/todo/tnx-weekly-todo-planner/weekly-todo-planner-cbx.js","webpack:///src/app/todo/tnx-weekly-todo-planner/weekly-todo-planner-input.js","webpack:///src/app/todo/tnx-weekly-todo-planner/weekly-todo-planner-todo-item.js","webpack:///src/app/todo/tnx-weekly-todo-planner/weekly-todo-planner.js","webpack:///src/app/todo/todo.component.ts","webpack:///src/app/todo/todo.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","providers","AppComponent","authService","autoLogin","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","bootstrap","entryComponents","AuthGuard","router","route","state","isAuth","isUserAuthenticated","navigate","AuthInterceptor","next","token","getToken","modifiedReq","clone","headers","set","handle","LoginComponent","form","email","validators","required","minLength","password","valid","login","value","reset","onLogin","SignupComponent","name","createUser","onSignup","ErrorComponent","data","ErrorInterceptor","dialog","toDoService","pipe","error","setLoading","message","open","HeaderComponent","isAuthenticated","authTokenSub","getAuthTokenListner","subscribe","logout","unsubscribe","MaterialModule","BACKEND_URL","apiUrl","AuthService","http","userAuthenticated","authTokenListner","authData","post","res","console","log","asObservable","userId","getAuthData","expDate","expiryDate","Date","expiresIn","getTime","expDuration","setTokenTimer","response","saveAuthData","tokenTimer","setTimeout","username","now","localStorage","setItem","toISOString","removeItem","getItem","clearAuthData","clearTimeout","providedIn","TodoService","toDoItems","itemsUpdated","loadingListner","loading","flag","pageSize","currPage","queryParams","get","itemsData","items","map","item","title","body","toDoDay","isDone","_id","itemsCount","totalItems","transformedItems","itemId","itemData","put","AddItemComponent","activeRoute","mode","weekDays","selectDay","paramMap","paraMap","has","resData","transformedItem","setValue","editItem","addItem","onAddItem","onCancel","customElements","define","shadowRoot","attachShadow","label","document","createElement","className","innerText","span","input","setAttribute","appendChild","style","textContent","addEventListener","updateDisplay","HTMLElement","contentEditable","hasAttribute","val","container","cbx","newState","Object","entries","forEach","key","isObject","template","getElementById","templateContent","content","cloneNode","display","width","clientWidth","focus","setSelectionRange","length","preventDefault","TodoComponent","toDoList","toDoListToday","itemsPerPage","pageSizeOptions","Days","displayedColumns","columnsToDisplay","slice","getLoadingListner","isLoading","getToDoItems","itemsSub","day","getDay","filter","pageData","pageIndex","loadingSub","deleteItem","setIsDone","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { AddItemComponent } from './todo/add-item/add-item.component';\nimport { AuthGuard } from './auth/auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: TodoComponent, canActivate: [ AuthGuard ] },\n  { path: 'create', component: AddItemComponent, canActivate: [ AuthGuard ] },\n  { path: 'edit/:itemId', component: AddItemComponent, canActivate: [ AuthGuard ] },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authService.autoLogin();\n  }\n}\n","<app-header></app-header>\n<main>\n  <router-outlet></router-outlet>\n</main>\n","import { ErrorComponent } from './error/error.component';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\n\nimport { MaterialModule } from './material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AddItemComponent } from './todo/add-item/add-item.component';\nimport { ErrorInterceptor } from './error/error.interceptor';\nimport { AuthInterceptor } from './auth/auth.interceptor';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    TodoComponent,\n    SignupComponent,\n    HeaderComponent,\n    AddItemComponent,\n    ErrorComponent\n  ],\n  imports: [\n    BrowserModule,\n    MaterialModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent]\n})\nexport class AppModule { }\n","import {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  RouterStateSnapshot,\n  UrlTree,\n  Router\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n\n      const isAuth = this.authService.isUserAuthenticated();\n      if (!isAuth) {\n        this.router.navigate(['/login']);\n      }\n      return isAuth;\n  }\n}\n","import { AuthService } from './../services/auth.service';\nimport { HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const token = this.authService.getToken();\n    const modifiedReq = req.clone({\n      headers: req.headers.set('Authorization', 'Bearer ' + token)\n    });\n    return next.handle(modifiedReq);\n  }\n}\n","import { AuthService } from '../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      email: new FormControl(null, {validators: [Validators.required, Validators.email, Validators.minLength(3)]}),\n      password: new FormControl(null, {validators: [Validators.required]}),\n    });\n  }\n\n  onLogin() {\n    if (!this.form.valid) {\n      return;\n    }\n    this.authService.login(this.form.value.email, this.form.value.password);\n    this.form.reset();\n  }\n\n}\n","<mat-card>\n  <form [formGroup] = \"form\" (ngSubmit) = \"onLogin()\">\n    <mat-form-field class=\"example-full-width\">\n      <input\n      type=\"email\"\n      matInput\n      name=\"email\"\n      formControlName=\"email\"\n      placeholder=\"email\">\n      <mat-error *ngIf=\"form.get('email').touched && form.get('email').invalid\"> Please provide a valid Email!</mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"example-full-width\">\n      <input\n        type=\"password\"\n        matInput\n        name=\"password\"\n        formControlName=\"password\"\n        placeholder=\"Password\">\n      <mat-error *ngIf=\"form.get('password').touched && form.get('password').invalid\"> Please provide a valid password!</mat-error>\n    </mat-form-field>\n    <br>\n    <button type=\"submit\"\n    color = \"accent\"\n    mat-raised-button>Login</button>\n  </form>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      email: new FormControl(null, {validators: [Validators.required, Validators.email, Validators.minLength(3)]}),\n      password: new FormControl(null, {validators: [Validators.required]}),\n      name: new FormControl(null, {validators: [Validators.required]}),\n    });\n  }\n\n  onSignup() {\n    if (!this.form.valid) {\n      return;\n    }\n\n    this.authService.createUser(this.form.value.name, this.form.value.email, this.form.value.password);\n    this.form.reset();\n  }\n\n}\n","<mat-card>\n  <form [formGroup] = \"form\" (ngSubmit) = \"onSignup()\">\n    <mat-form-field class=\"example-full-width\">\n      <input\n        type=\"name\"\n        matInput\n        name=\"name\"\n        formControlName=\"name\"\n        placeholder=\"Name\">\n      <mat-error *ngIf=\"form.get('name').touched && form.get('name').invalid\"> Please provide a valid Name!</mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"example-full-width\">\n      <input\n      type=\"email\"\n      matInput\n      name=\"email\"\n      formControlName=\"email\"\n      placeholder=\"email\">\n      <mat-error *ngIf=\"form.get('email').touched && form.get('email').invalid\"> Please provide a valid Email!</mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"example-full-width\">\n      <input\n        type=\"password\"\n        matInput\n        name=\"password\"\n        formControlName=\"password\"\n        placeholder=\"Password\">\n      <mat-error *ngIf=\"form.get('password').touched && form.get('password').invalid\"> Please provide a valid password!</mat-error>\n    </mat-form-field>\n    <br>\n    <button type=\"submit\"\n    color = \"accent\"\n    mat-raised-button>Signup</button>\n  </form>\n</mat-card>\n","import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}) {}\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 mat-dialog-title>An Error Occured!</h1>\n<div mat-dialog-content>\n  <p mat-body-1> {{ data.message }}</p>\n</div>\n<div mat-dialog-actions>\n  <button mat-dialog-close mat-raised-button color = \"primary\">Close</button>\n</div>\n","import { TodoService } from './../services/todo.service';\nimport { ErrorComponent } from './error.component';\nimport { HttpErrorResponse, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(public dialog: MatDialog, private toDoService: TodoService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    return next.handle(req)\n    .pipe(\n      catchError((error: HttpErrorResponse) => {\n        this.toDoService.setLoading(false);\n        let message = 'an unknown error occured!';\n        if (error.error.message) {\n          message = error.error.message;\n        }\n        this.dialog.open(ErrorComponent, { data: {message} });\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { Subscription } from 'rxjs';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  isAuthenticated = false;\n  private authTokenSub: Subscription;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.isAuthenticated = this.authService.isUserAuthenticated();\n    this.authTokenSub = this.authService.getAuthTokenListner().subscribe(isAuthenticated => {\n      this.isAuthenticated = isAuthenticated;\n    });\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  ngOnDestroy() {\n    this.authTokenSub.unsubscribe();\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <span class=\"app\">\n    <a routerLink=\"/\">Todo App</a>\n  </span>\n  <span class=\"spacer\"></span>\n  <span>\n    <ul>\n      <li *ngIf=\"isAuthenticated\">\n        <a mat-button routerLink=\"/create\" routerLinkActive=\"mat-accent\">New Item</a>\n      </li>\n      <li *ngIf=\"!isAuthenticated\">\n        <a mat-button routerLink=\"/login\" routerLinkActive=\"mat-accent\">Login</a>\n      </li>\n      <li *ngIf=\"!isAuthenticated\">\n        <a mat-button routerLink=\"/signup\" routerLinkActive=\"mat-accent\">Signup</a>\n      </li>\n      <li *ngIf=\"isAuthenticated\">\n        <button mat-button routerLinkActive=\"mat-accent\" (click) = \"onLogout()\">Logout</button>\n      </li>\n    </ul>\n  </span>\n</mat-toolbar>\n","import { NgModule } from '@angular/core';\n\nimport {MatInputModule} from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\n\n\n@NgModule({\n  // Imports of these modules will be automatically done by angualr (short hand)\n  exports: [\n    MatDialogModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatSelectModule,\n    MatIconModule\n  ]\n})\nexport class MaterialModule {\n\n}\n","import { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { AuthData } from '../auth/auth.model';\nimport { environment } from '../../environments/environment';\nconst BACKEND_URL = environment.apiUrl + 'users/';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private token;\n  private userId: string;\n  private userAuthenticated = false;\n  private authTokenListner = new Subject<boolean>();\n  private tokenTimer: any;\n  constructor(private http: HttpClient, private router: Router) { }\n\n  createUser(name: string, email: string, password: string) {\n    const authData: AuthData = { name, email, password };\n\n    this.http.post<{message: string, createdPost: any}>(BACKEND_URL + 'signup', authData)\n    .subscribe(res => {\n      this.router.navigate(['/login']);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  getAuthTokenListner() {\n    return this.authTokenListner.asObservable();\n  }\n\n  getUserId() {\n    return this.userId;\n  }\n\n  autoLogin() {\n    const authData = this.getAuthData();\n    if (!authData) {\n      return;\n    }\n\n    const token = authData.token;\n    const userId = authData.userId;\n    const expDate = authData.expDate;\n\n    const expiryDate = new Date(expDate);\n    // const now = new Date();\n    const expiresIn = expiryDate.getTime() - new Date().getTime();\n    if (expiresIn > 0) {\n      this.token = token;\n      this.userId = userId;\n      const expDuration = expiresIn / 1000;\n      this.setTokenTimer(expDuration);\n      this.userAuthenticated = true;\n      this.authTokenListner.next(true);\n    }\n\n  }\n\n  login(email: string, password: string) {\n    //const authData: AuthData = { 'dummy', email, password };\n    this.http.post<{message: string, userId: string, token: string, expiresIn: number }>\n    (BACKEND_URL + 'login', {email, password })\n    .subscribe(response => {\n      if (response.token) {\n        this.token = response.token;\n        this.userId = response.userId;\n        const expDuration = response.expiresIn;\n        this.setTokenTimer(expDuration);\n        this.saveAuthData(response);\n        this.userAuthenticated = true;\n        this.authTokenListner.next(true);\n        this.router.navigate(['/']);\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  private setTokenTimer(expDuration: number) {\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, expDuration * 1000); // multiplied by 1000 because setTimeout works in miliseconds\n  }\n\n  private saveAuthData(response: any) {\n    const token = response.token;\n    const userId = response.userId;\n    const expiresIn = response.expiresIn;\n    const username = response.name;\n\n    const now = new Date();\n    const expDate = new Date(now.getTime() + expiresIn * 1000);\n\n    localStorage.setItem('token', token);\n    localStorage.setItem('username', username);\n    localStorage.setItem('userId', userId);\n    localStorage.setItem('expDate', expDate.toISOString());\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('expDate');\n  }\n\n  private getAuthData() {\n    const token = localStorage.getItem('token');\n    const userId = localStorage.getItem('userId');\n    const expDate = localStorage.getItem('expDate');\n    if (!token || !userId || !expDate) {\n      return;\n    }\n\n    return {\n      token,\n      userId,\n      expDate\n    };\n  }\n\n  getToken() {\n    return this.token;\n  }\n\n  isUserAuthenticated() {\n    return this.userAuthenticated;\n  }\n\n  logout() {\n    this.token = null;\n    this.userId = null;\n    this.userAuthenticated = false;\n    this.clearAuthData();\n    this.authTokenListner.next(false);\n    clearTimeout(this.tokenTimer);\n    this.router.navigate(['/login']);\n  }\n}\n","import { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\n\nimport { Item } from './../todo/item.model';\nimport { toDoData } from './../todo/todo.model';\nimport { environment } from './../../environments/environment';\n\nconst BACKEND_URL = environment.apiUrl + 'todo/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n  private toDoItems: Item[] = [];\n  itemsUpdated = new Subject<{items: Item[], itemsCount: number}>();\n  private loadingListner = new Subject<boolean>();\n  private loading = false;\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  setLoading(flag: boolean) {\n    this.loadingListner.next(flag);\n  }\n\n  getLoadingListner() {\n    return this.loadingListner.asObservable();\n  }\n  getToDoItems(pageSize: number, currPage: number) {\n    const queryParams = `?pagesize=${pageSize}&page=${currPage}`;\n    this.http.get<{message: string, items: any, totalItems: number}>(BACKEND_URL + queryParams)\n    .pipe(\n      map(itemsData => {\n        return {\n          items: itemsData.items.map(item => {\n            return {\n              title: item.title,\n              body: item.body,\n              toDoDay: item.toDoDay,\n              isDone: item.isDone,\n              id: item._id\n            };\n          }),\n          itemsCount: itemsData.totalItems\n        };\n      })\n    )\n    .subscribe((transformedItems) => {\n      this.toDoItems = transformedItems.items;\n      this.itemsUpdated.next({items: [...this.toDoItems], itemsCount: transformedItems.itemsCount});\n    });\n  }\n\n  getItem(itemId: string) {\n    return this.http.get<{_id: string, title: string, body: string, toDoDay: string, isDone: boolean}>(\n      BACKEND_URL + itemId\n    ); // returns observable (not subcribed here and will subscribe in the component)\n  }\n\n  addItem(title: string, body: string, toDoDay: string) {\n    const itemData: toDoData = {title, body, toDoDay};\n    this.http.post(BACKEND_URL, itemData)\n    .subscribe((res: any) => {\n      console.log(res);\n      this.router.navigate(['/']);\n    })\n  }\n\n  editItem(itemId: string, title: string, body: string, toDoDay: string) {\n    const itemData: Item = {title, body, toDoDay, id: itemId};\n    this.http.put(BACKEND_URL + itemId, itemData)\n    .subscribe((res: any) => {\n      console.log(res);\n      this.router.navigate(['/']);\n    })\n  }\n\n  setIsDone(itemId: string, isDone: boolean) {\n    this.http.put(BACKEND_URL + itemId, {isDone, id: itemId})\n      .subscribe((res: any) => {\n        console.log(res);\n        this.router.navigate(['/']);\n      })\n  }\n\n  deleteItem(itemId: string) {\n    return this.http.delete<{message: string}>(BACKEND_URL + itemId);\n  }\n\n\n}\n","import { map } from 'rxjs/operators';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { TodoService } from './../../services/todo.service';\nimport { Item } from './../item.model';\n\n@Component({\n  selector: 'app-add-item',\n  templateUrl: './add-item.component.html',\n  styleUrls: ['./add-item.component.css']\n})\nexport class AddItemComponent implements OnInit {\n  form: FormGroup;\n  mode = 'create';\n  item: Item;\n  itemId: string;\n  weekDays = [\n    { value: 'Monday' },\n    { value: 'Tuesday' },\n    { value: 'Wednesday' },\n    { value: 'Thursday' },\n    { value: 'Firday' },\n    { value: 'Saturday' },\n    { value: 'Sunday' }\n  ];\n  constructor(private toDoService: TodoService, private router: Router, private activeRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      title: new FormControl(null, {validators: [Validators.required, Validators.minLength(3)]}),\n      body: new FormControl(null, {validators: [Validators.required]}),\n      selectDay: new FormControl(this.weekDays[0].value, {validators: [Validators.required]})\n    });\n\n    this.activeRoute.paramMap.subscribe((paraMap: ParamMap) => {\n      if (paraMap.has('itemId')) {\n        this.mode = 'edit';\n        this.itemId = paraMap.get('itemId');\n        this.toDoService.getItem(this.itemId)\n        .pipe(\n          map(resData => {\n            return {\n              id: resData._id,\n              title: resData.title,\n              body: resData.body,\n              toDoDay: resData.toDoDay\n            };\n          })\n        )\n        .subscribe(transformedItem => {\n          this.item = transformedItem;\n          this.form.setValue({\n            title: transformedItem.title,\n            body: transformedItem.body,\n            selectDay: transformedItem.toDoDay,\n          });\n        });\n      } else {\n        this.itemId = null;\n        this.item = null;\n        this.mode = 'create';\n      }\n    });\n  }\n\n  onAddItem() {\n    if (!this.form.valid) {\n      return;\n    }\n    if (this.mode === 'edit') {\n      this.toDoService.editItem(this.itemId, this.form.value.title, this.form.value.body, this.form.value.selectDay);\n    } else {\n      this.toDoService.addItem(this.form.value.title, this.form.value.body, this.form.value.selectDay);\n    }\n    this.form.reset();\n  }\n\n  onCancel(){\n    this.router.navigate(['/']);\n  }\n\n}\n","<mat-card>\n  <form [formGroup] = \"form\" (ngSubmit) = \"onAddItem()\">\n    <mat-form-field class=\"example-full-width\">\n      <input\n      type=\"text\"\n      matInput\n      name=\"title\"\n      formControlName=\"title\"\n      placeholder=\"title\">\n      <mat-error *ngIf=\"form.get('title').touched && form.get('title').invalid\"> Please provide a valid Title!</mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"example-full-width\">\n      <input\n        type=\"body\"\n        matInput\n        name=\"body\"\n        formControlName=\"body\"\n        placeholder=\"body\">\n      <mat-error *ngIf=\"form.get('body').touched && form.get('body').invalid\"> Please provide a valid body!</mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Select Day</mat-label>\n      <mat-select formControlName =\"selectDay\">\n        <mat-option [value]=\"option.value\" *ngFor=\"let option of weekDays\">{{option.value}}</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <br>\n    <button type=\"submit\" color = \"primary\" mat-raised-button>{{mode === 'create' ? \"Add Item\" : \"Edit Item\"}}</button> |\n    <button type=\"button\" color = \"warn\" mat-raised-button (click) = \"onCancel()\">Cancel</button>\n  </form>\n</mat-card>\n","customElements.define('tnx-checkbox',\n    class extends HTMLElement {\n      constructor() {\n        super();\n\n        const shadowRoot = this.attachShadow({mode: 'closed'});\n        const label = document.createElement('label');\n        label.className = \"container\";\n        label.innerText = \"\";\n        const span = document.createElement('span');\n        span.className = \"checkmark\";\n\n        const input = document.createElement('input');\n        input.setAttribute(\"type\",\"checkbox\");\n\n        label.appendChild(input);\n        label.appendChild(span);\n\n        const style = document.createElement('style');\n        style.textContent = `\n        \n       .container {\n          display: inline;\n          position: relative;\n          padding-left: 35px;\n          margin-bottom: 12px;\n          cursor: pointer;\n          font-size: 22px;\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          user-select: none;\n        }\n        \n        /* Hide the browser's default checkbox */\n        .container input {\n          position: absolute;\n          opacity: 0;\n          cursor: pointer;\n          height: 0;\n          width: 0;\n        }\n\n        /* Create a custom checkbox */\n        .checkmark {\n          position: absolute;\n          top: 0;\n          left: 0;\n          height: 22px;\n          width: 22px;\n          background-color: #eee;\n        }\n        \n        /* On mouse-over, add a grey background color */\n        .container:hover input ~ .checkmark {\n          background-color: #ccc;\n        }\n        \n        /* When the checkbox is checked, add a blue background */\n        .container input:checked ~ .checkmark {\n          background-color: green;\n        }\n        \n        /* Create the checkmark/indicator (hidden when not checked) */\n        .checkmark:after {\n          content: \"\";\n          position: absolute;\n          display: none;\n        }\n        \n        /* Show the checkmark when checked */\n        .container input:checked ~ .checkmark:after {\n          display: block;\n        }\n        \n        /* Style the checkmark/indicator */\n        .container .checkmark:after {\n          left: 7px;\n          top: 3px;\n          width: 5px;\n          height: 10px;\n          border: solid white;\n          border-width: 0 3px 3px 0;\n          -webkit-transform: rotate(45deg);\n          -ms-transform: rotate(45deg);\n          transform: rotate(45deg);\n        }\n                \n      `;\n\n        shadowRoot.appendChild(style);\n        shadowRoot.appendChild(label);\n\n        this.addEventListener('click', () => {\n\n        });\n\n\n        input.addEventListener('blur', updateDisplay);\n\n        function updateDisplay() {\n\n        }\n      }\n    }\n);","customElements.define('tnx-input',\n    class extends HTMLElement {\n      constructor() {\n        super();\n\n        this.state = {title:\"test\"};\n\n\n        const shadowRoot = this.attachShadow({mode: 'open'});\n        const input = document.createElement('span');\n        this.input = input;\n        input.contentEditable = \"true\";\n        input.setAttribute(\"role\",\"textbox\");\n        input.className = \"input\";\n        input.innerText = \" \";\n        input.setAttribute(\"data-bind\",\"title\");\n        input.setAttribute(\"id\",\"customInput\");\n        const style = document.createElement('style');\n        style.textContent = `\n        .input{\n            display:inline-block;\n            border: 1px solid #ccc;\n            font-family: inherit;\n            font-size: inherit;\n            padding: 1px 6px;\n            min-width: 100px;\n        }        \n       \n                \n      `;\n\n        shadowRoot.appendChild(style);\n        shadowRoot.appendChild(input);\n\n        this.addEventListener('click', () => {\n\n        });\n\n\n        input.addEventListener('blur', updateDisplay);\n\n        function updateDisplay() {\n\n        }\n      }\n\n      connectedCallback() {\n\n        if (!this.hasAttribute('value')) {\n          this.setAttribute('value', 1);\n        }\n      }\n\n/*      static get observedAttributes() {\n        return ['value'];\n      }\n\n      attributeChangedCallback(name, oldValue, newValue) {\n        this.input.value = this.value;\n      }*/\n\n      setValue(val){\n        this.input.innerText = val;\n      }\n    }\n);","customElements.define('tnx-todo-item',\n    class extends HTMLElement {\n      constructor() {\n        super();\n\n        this.value = {};\n\n        const shadowRoot = this.attachShadow({mode: 'open'});\n        const container = document.createElement('div');\n        const input = document.createElement('tnx-input');\n        const cbx = document.createElement('tnx-checkbox');\n\n\n        const style = document.createElement('style');\n        style.textContent = `\n        :host{display:block}\n        div{\n         display:flex;\n        }\n        tnx-input{\n         margin-right:5px;\n         flex-grow:1;\n        }         \n      `;\n\n        input.setAttribute(\"data-bind\",\"title\");\n\n        container.appendChild(input);\n        container.appendChild(cbx);\n\n        shadowRoot.appendChild(style);\n        shadowRoot.appendChild(container);\n\n        this.addEventListener('click', () => {\n\n        });\n\n\n        input.addEventListener('blur', updateDisplay);\n\n        function updateDisplay() {\n\n        }\n\n\n      }\n\n      setState(newState) {\n        Object.entries(newState)\n            .forEach(([key, value]) => {\n              this.state[key] = this.isObject(this.state[key]) &&\n              this.isObject(value) ? {...this.state[key], ...value} : value;\n            });\n      }\n\n    }\n);","customElements.define('person-details',\n    class extends HTMLElement {\n      constructor() {\n        super();\n\n        const template = document.getElementById('person-template');\n        const templateContent = template.content;\n\n        const shadowRoot = this.attachShadow({mode: 'open'});\n\n        const style = document.createElement('style');\n        style.textContent = `\n        div { padding: 10px; border: 1px solid gray; width: 200px; margin: 10px; }\n        h2 { margin: 0 0 10px; }\n        ul { margin: 0; }\n        p { margin: 10px 0; }\n      `;\n\n        shadowRoot.appendChild(style);\n        shadowRoot.appendChild(templateContent.cloneNode(true));\n      }\n    }\n);\n\ncustomElements.define('edit-word',\n    class extends HTMLElement {\n      constructor() {\n        super();\n\n        const shadowRoot = this.attachShadow({mode: 'open'});\n        const form = document.createElement('form');\n        const input = document.createElement('input');\n        const span = document.createElement('span');\n\n        const style = document.createElement('style');\n        style.textContent = 'span { background-color: #eef; padding: 0 2px }';\n\n        shadowRoot.appendChild(style);\n        shadowRoot.appendChild(form);\n        shadowRoot.appendChild(span);\n\n        span.textContent = this.textContent;\n        input.value = this.textContent;\n\n        form.appendChild(input);\n        form.style.display = 'none';\n        span.style.display = 'inline-block';\n        input.style.width = span.clientWidth + 'px';\n\n        this.setAttribute('tabindex', '0');\n        input.setAttribute('required', 'required');\n        this.style.display = 'inline-block';\n\n        this.addEventListener('click', () => {\n          span.style.display = 'none';\n          form.style.display = 'inline-block';\n          input.focus();\n          input.setSelectionRange(0, input.value.length)\n        });\n\n        form.addEventListener('submit', e => {\n          updateDisplay();\n          e.preventDefault();\n        });\n\n        input.addEventListener('blur', updateDisplay);\n\n        function updateDisplay() {\n          span.style.display = 'inline-block';\n          form.style.display = 'none';\n          span.textContent = input.value;\n          input.style.width = span.clientWidth + 'px';\n        }\n      }\n    }\n);","import { Router } from '@angular/router';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { PageEvent } from '@angular/material/paginator';\n\nimport './tnx-weekly-todo-planner/weekly-todo-planner.js';\nimport './tnx-weekly-todo-planner/weekly-todo-planner-cbx.js';\nimport './tnx-weekly-todo-planner/weekly-todo-planner-input.js';\nimport './tnx-weekly-todo-planner/weekly-todo-planner-todo-item.js';\n\nimport { TodoService } from './../services/todo.service';\nimport { Item } from './item.model';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit, OnDestroy {\n  toDoList: Item[] = [];\n  toDoListToday: Item[] = [];\n  loading = false;\n  totalItems = 0;\n  itemsPerPage = 10;\n  currPage = 1;\n  pageSizeOptions = [1, 2, 5, 10];\n  private itemsSub: Subscription;\n  private loadingSub: Subscription;\n  Days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  username = localStorage.getItem('username');\n\n  displayedColumns: string[] = ['title', 'body', 'toDoDay', 'isDone', 'actions'];\n  columnsToDisplay: string[] = this.displayedColumns.slice();\n\n  constructor(private toDoService: TodoService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.toDoService.setLoading(true);\n    this.toDoService.getLoadingListner().subscribe( isLoading => {\n      // alert(isLoading);\n      this.loading = isLoading;\n    });\n\n    this.toDoService.getToDoItems(this.itemsPerPage, this.currPage);\n\n    this.itemsSub = this.toDoService.itemsUpdated\n    .subscribe((itemsData: {items: Item[], itemsCount: number}) => {\n\n      this.totalItems = itemsData.itemsCount;\n      console.log(itemsData.items)\n      this.toDoList = itemsData.items;\n\n      const day = new Date().getDay();\n      this.toDoListToday = itemsData.items.filter(item => item.toDoDay === this.Days[day]);\n\n      this.toDoService.setLoading(false);\n\n    }, error => {\n      this.totalItems = 0;\n      this.toDoService.setLoading(false);\n    });\n  }\n\n  onPageChanged(pageData: PageEvent) {\n    this.loading = true;\n    this.itemsPerPage = pageData.pageSize;\n    this.currPage = pageData.pageIndex + 1;\n    this.toDoService.getToDoItems(this.itemsPerPage, this.currPage);\n  }\n\n\n\n  ngOnDestroy() {\n    this.itemsSub.unsubscribe();\n    if(this.loadingSub) {\n      this.loadingSub.unsubscribe();\n    }\n  }\n\n\n  onAddItem() {\n    this.router.navigate(['/create']);\n  }\n\n  onItemEdit(itemId: string) {\n    // alert(itemId);\n    this.toDoService.deleteItem(itemId).subscribe(res => {\n      this.router.navigate(['/']);\n    });\n  }\n\n  changeValue(id, value) {\n    this.toDoService.setIsDone(id, !value);\n  }\n\n  onItemDelete(itemId: string) {\n    // alert(itemId);\n    this.toDoService.deleteItem(itemId).subscribe(res => {\n      this.loading = true;\n      this.toDoService.getToDoItems(this.itemsPerPage, this.currPage);\n    });\n  }\n\n}\n","<script src=\"tnx-weekly-todo-planner/weekly-todo-planner.js\" defer></script>\n<script src=\"tnx-weekly-todo-planner/weekly-todo-planner-cbx.js\" defer></script>\n<script src=\"tnx-weekly-todo-planner/weekly-todo-planner-input.js\" defer></script>\n<script src=\"tnx-weekly-todo-planner/weekly-todo-planner-todo-item.js\" defer></script>\n<div class=\"main\">\n\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\n\n  <button style=\"float:right\" mat-raised-button color = \"primary\" (click)=\"onAddItem()\" *ngIf=\"!loading\"> Add Item </button>\n\n  <h2>Hi {{username}}, deine Todos für Heute:</h2>\n\n  <mat-table [dataSource]=\"toDoListToday\" class=\"mat-elevation-z8 item-table\" *ngIf=\"toDoListToday.length > 0 && !loading\">\n    <ng-container matColumnDef=\"title\">\n      <mat-header-cell *matHeaderCellDef> Group </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.title}} </mat-cell>\n    </ng-container>\n\n    <!-- Body Column -->\n    <ng-container matColumnDef=\"body\">\n      <mat-header-cell *matHeaderCellDef> Description </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.body}} </mat-cell>\n    </ng-container>\n\n    <!-- Day Column -->\n    <ng-container matColumnDef=\"toDoDay\">\n      <mat-header-cell *matHeaderCellDef> Todo Day </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.toDoDay}} </mat-cell>\n    </ng-container>\n\n    <!-- Is Done Column -->\n    <ng-container matColumnDef=\"isDone\">\n      <mat-header-cell *matHeaderCellDef> Done </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n      <mat-checkbox [checked]=\"element.isDone\" (click)=\"changeValue(element.id,element.isDone)\"></mat-checkbox>\n      </mat-cell>\n    </ng-container>\n\n    <!-- Action Column -->\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef class=\"actions\"> Actions </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        <button mat-mini-fab color=\"primary\" [routerLink] = \"['/edit', element.id]\">\n          <mat-icon>edit</mat-icon>\n        </button>&nbsp;\n        <button mat-mini-fab color=\"warn\" (click) = \"onItemDelete(element.id)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n\n  </mat-table>\n  <br>\n  <mat-paginator\n    [length]=\"totalItems\"\n    [pageSize]=\"itemsPerPage\"\n    [pageSizeOptions]=\"pageSizeOptions\"\n    (page) = \"onPageChanged($event)\"\n    *ngIf=\"toDoList.length > 0\"\n  ></mat-paginator>\n  <p class=\"infotext mat-body-2\" *ngIf=\"toDoList.length === 0 && !loading\">No item added yet!</p>\n\n\n\n<!--  <div *ngFor=\"let element of toDoList\">\n    {{ element.title }}\n  </div>-->\n\n  <div class=\"mat-elevation-z8\" style=\"padding:8px\">\n    <h2>Weekly Todos</h2>\n  <section>\n    <header>\n      <div class=\"colH\">MO</div>\n      <div class=\"colH\">DI</div>\n      <div class=\"colH\">MI</div>\n      <div class=\"colH\">DO</div>\n      <div class=\"colH\">FR</div>\n      <div class=\"colH\">SA</div>\n      <div class=\"colH\">SO</div>\n    </header>\n    <div class=\"rowContainer\">\n      <div class=\"row\" *ngFor=\"let element of toDoList\">\n        <div class=\"col1\" *ngIf=\"element.toDoDay === 'Monday'\">\n          {{ element.body }}\n        </div>\n        <div class=\"col\" *ngIf=\"element.toDoDay !== 'Monday'\">\n          <div></div>\n        </div>\n        <div class=\"col\" *ngIf=\"element.toDoDay === 'Tuesday'\">\n          {{ element.body }}\n        </div>\n        <div class=\"col\" *ngIf=\"element.toDoDay !== 'Tuesday'\">\n          <div></div>\n        </div>\n        <div class=\"col\" *ngIf=\"element.toDoDay === 'Wednesday'\">\n          {{ element.body }}\n        </div>\n        <div class=\"col\" *ngIf=\"element.toDoDay !== 'Wednesday'\">\n          <div></div>\n        </div>\n        <div class=\"col\" *ngIf=\"element.toDoDay === 'Thursday'\">\n          {{ element.body }}\n        </div>\n        <div class=\"col\" *ngIf=\"element.toDoDay !== 'Thursday'\">\n          <div></div>\n        </div>\n        <div class=\"col\" *ngIf=\"element.toDoDay === 'Friday'\">\n          {{ element.body }}\n        </div>\n        <div class=\"col\" *ngIf=\"element.toDoDay !== 'Friday'\">\n          <div></div>\n        </div>\n        <div class=\"col\" *ngIf=\"element.toDoDay === 'Saturday'\">\n          {{ element.body }}\n        </div>\n        <div class=\"col\" *ngIf=\"element.toDoDay !== 'Saturday'\">\n          <div></div>\n        </div>\n        <div class=\"col\" *ngIf=\"element.toDoDay === 'Sunday'\">\n          <div [attr.done]=\"element.isDone\">{{ element.body }}</div>\n        </div>\n        <div class=\"col\" *ngIf=\"element.toDoDay !== 'Sunday'\">\n          <div></div>\n        </div>\n      </div>\n\n\n      <div class=\"row\">\n        <div class=\"colE\"></div>\n        <div class=\"colE\"></div>\n        <div class=\"colE\"></div>\n        <div class=\"colE\"></div>\n        <div class=\"colE\"></div>\n        <div class=\"colE\"></div>\n        <div class=\"colE\"></div>\n      </div>\n    </div>\n  </section>\n  </div>\n\n\n\n\n\n\n\n\n\n\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}